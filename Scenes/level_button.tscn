[gd_scene load_steps=15 format=2]

[ext_resource path="res://Fonts/Roboto-Regular.ttf" type="DynamicFontData" id=1]
[ext_resource path="res://Scripts/level_button.gd" type="Script" id=4]
[ext_resource path="res://Sprites/path.png" type="Texture" id=7]
[ext_resource path="res://Sprites/rat.png" type="Texture" id=8]
[ext_resource path="res://Sprites/level_button.png" type="Texture" id=9]
[ext_resource path="res://Sprites/star.png" type="Texture" id=10]

[sub_resource type="DynamicFont" id=1]
size = 42
font_data = ExtResource( 1 )

[sub_resource type="Shader" id=2]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform float length_line;

// Usually takes a number between 0 and 2
float kind_of_square_pulse(float s) {
	float transition = 0.04;
	if (s < transition) return s/transition;
	else if (s >= transition && s < 1.0) return 1.0;
	else if (s >= 1.0 && s < 1.0 + transition) return (-s + 1.0 + transition)/transition;
	else if (s >= 1.0 + transition && s < 2.0) return 0.0;
}

float sawtooth(float x, float interval) {
	return 2.0*mod(x, interval)/interval;
}

void fragment() {
	// roughly the pixel interval of the repeating pattern
	float interval = 6.0;
	
	vec2 coord = UV;
	
	float value = kind_of_square_pulse(sawtooth(coord.r, interval));
//	float value = coord.x;
	
	COLOR = vec4(COLOR.rgb, value);
}"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/length_line = 200.0

[sub_resource type="Shader" id=6]
code = "shader_type canvas_item;
render_mode blend_mix;

//uniform float interval : hint_range(0.1, 20);
//uniform float rings : hint_range(1, 4);
//uniform float period : hint_range(0.1, 5);

uniform float frequency : hint_range(1, 5);

float sawtooth(float x, float a) {
	return mod(x, a)/a;
}

void fragment() {
	float angle = 0.2;
	vec4 coord = FRAGCOORD;
	
	float dist = distance(vec2(0.5,0.5), UV);
	
//	float value = (sin((dist/interval - TIME)*3.14/period)+1.0) / 2.0;
//	float value = min(sawtooth((dist*interval - TIME/period), 1.0/rings), 0.8);
	float value = (sin(- (TIME * frequency) + (cos(angle) * coord.x - sin(angle) * coord.y) / 80.0) + 0.3) / 2.0;
	
	COLOR = texture(TEXTURE, UV);
	COLOR = vec4(1.0, 1.0, 1.0,  0.6 * COLOR.a * value);
//	COLOR = mix(COLOR, vec4(1.0, 1.0, 1.0, COLOR.a), value);
}"

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 6 )
shader_param/frequency = 1.8

[sub_resource type="StreamTexture" id=8]
flags = 4
load_path = "res://.import/level_button.png-a456e52d1dce623cfd7d3373525b30ad.stex"

[sub_resource type="Animation" id=4]
resource_name = "star_anim"
length = 0.6
tracks/0/type = "value"
tracks/0/path = NodePath("Star:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.4, 0.6 ),
"transitions": PoolRealArray( -2, -2, -2 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1.3, 1.3 ), Vector2( 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Star:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.6 ),
"transitions": PoolRealArray( -2, -2 ),
"update": 0,
"values": [ 0.0, 288.0 ]
}

[sub_resource type="Animation" id=5]
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("NextPath:points")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ PoolVector2Array( 50, 0, 50, 0 ), PoolVector2Array( 50, 0, 256, 0 ) ]
}

[node name="LevelButton" type="Node2D"]
script = ExtResource( 4 )
previous_rat = ExtResource( 8 )
previous_trace = ExtResource( 7 )

[node name="Label" type="Label" parent="."]
margin_left = -45.1899
margin_top = -138.326
margin_right = 42.8101
margin_bottom = -82.3258
custom_fonts/font = SubResource( 1 )
custom_colors/font_color = Color( 1, 1, 1, 1 )
text = "1"
align = 1
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="NextPath" type="Line2D" parent="."]
visible = false
points = PoolVector2Array( 50, 0, 256, 0 )
width = 30.0
default_color = Color( 1, 1, 1, 1 )
joint_mode = 2
begin_cap_mode = 2
end_cap_mode = 2
antialiased = true

[node name="NextRat" type="Line2D" parent="."]
visible = false
material = SubResource( 3 )
points = PoolVector2Array( 50, 0, 256, 0 )
width = 5.0
default_color = Color( 1, 1, 1, 1 )
texture_mode = 1
joint_mode = 2
begin_cap_mode = 2
end_cap_mode = 2
antialiased = true

[node name="TextureButton" type="TextureButton" parent="."]
modulate = Color( 0.964706, 0, 0, 1 )
margin_left = -70.0
margin_top = -70.0
margin_right = 70.0
margin_bottom = 71.0
texture_normal = ExtResource( 9 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Highlight" type="Sprite" parent="."]
visible = false
material = SubResource( 7 )
texture = SubResource( 8 )

[node name="PreviousPath" type="Sprite" parent="."]
visible = false
position = Vector2( -160, 0 )
texture = ExtResource( 8 )

[node name="Star" type="Sprite" parent="."]
position = Vector2( 0, 96 )
rotation = 5.02655
texture = ExtResource( 10 )

[node name="AnimationStar" type="AnimationPlayer" parent="."]
anims/star_anim = SubResource( 4 )

[node name="AnimationPath" type="AnimationPlayer" parent="."]
method_call_mode = 1
anims/path_anim = SubResource( 5 )
[connection signal="pressed" from="TextureButton" to="." method="_on_TextureButton_pressed"]
